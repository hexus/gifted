0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'png' ]
2 info using npm@1.1.63
3 info using node@v0.8.12
4 verbose read json C:\cygwin\home\Hexus\gifted\server\package.json
5 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\async\package.json
6 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\mime\package.json
7 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\mysql\package.json
8 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\socket.io\package.json
9 verbose from cache C:\cygwin\home\Hexus\gifted\server\package.json
10 verbose readDependencies using package.json deps
11 verbose cache add [ 'png', null ]
12 silly cache add name=undefined spec="png" args=["png",null]
13 verbose parsed url { pathname: 'png', path: 'png', href: 'png' }
14 silly lockFile 9040a7d6-png png
15 verbose lock png C:\Users\Hexus\AppData\Roaming\npm-cache\9040a7d6-png.lock
16 silly lockFile 9040a7d6-png png
17 verbose addNamed [ 'png', '' ]
18 verbose addNamed [ null, '' ]
19 silly lockFile 62f4d23d-png png@
20 verbose lock png@ C:\Users\Hexus\AppData\Roaming\npm-cache\62f4d23d-png.lock
21 silly addNameRange { name: 'png', range: '', hasData: false }
22 verbose url raw png
23 verbose url resolving [ 'https://registry.npmjs.org/', './png' ]
24 verbose url resolved https://registry.npmjs.org/png
25 info trying registry request attempt 1 at 03:48:04
26 verbose etag "7XZYEGA8DMJF7GUKYNEUIWSNI"
27 http GET https://registry.npmjs.org/png
28 http 304 https://registry.npmjs.org/png
29 silly registry.get cb [ 304,
29 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
29 silly registry.get     etag: '"7XZYEGA8DMJF7GUKYNEUIWSNI"',
29 silly registry.get     date: 'Mon, 12 Nov 2012 03:47:48 GMT',
29 silly registry.get     'content-length': '0' } ]
30 verbose etag png from cache
31 silly addNameRange number 2 { name: 'png', range: '', hasData: true }
32 silly addNameRange versions [ 'png',
32 silly addNameRange   [ '1.0.0',
32 silly addNameRange     '1.0.1',
32 silly addNameRange     '1.0.2',
32 silly addNameRange     '1.0.3',
32 silly addNameRange     '2.0.0',
32 silly addNameRange     '2.0.1',
32 silly addNameRange     '2.1.0',
32 silly addNameRange     '2.1.1' ] ]
33 verbose addNamed [ 'png', '2.1.1' ]
34 verbose addNamed [ '2.1.1', '2.1.1' ]
35 silly lockFile cbe26b45-png-2-1-1 png@2.1.1
36 verbose lock png@2.1.1 C:\Users\Hexus\AppData\Roaming\npm-cache\cbe26b45-png-2-1-1.lock
37 verbose read json C:\Users\Hexus\AppData\Roaming\npm-cache\png\2.1.1\package\package.json
38 silly lockFile cbe26b45-png-2-1-1 png@2.1.1
39 silly lockFile 62f4d23d-png png@
40 silly resolved [ { name: 'png',
40 silly resolved     version: '2.1.1',
40 silly resolved     main: './build/Release/png',
40 silly resolved     description: 'A C++ module for node-js that converts an RGB and RGBA buffers to PNG images (in memory).',
40 silly resolved     keywords: [ 'png', 'rgb', 'rgba', 'image', 'picture', 'encode' ],
40 silly resolved     author:
40 silly resolved      { name: 'Peteris Krumins',
40 silly resolved        email: 'peteris.krumins@gmail.com',
40 silly resolved        url: 'http://www.catonmat.net' },
40 silly resolved     license: { type: 'MIT' },
40 silly resolved     repository: { type: 'git', url: 'http://github.com/pkrumins/node-png.git' },
40 silly resolved     directories: { examples: 'examples', src: 'src' },
40 silly resolved     engines: { node: '>=0.6.0' },
40 silly resolved     scripts: { install: 'node-waf configure build' },
40 silly resolved     readme: 'This is a node.js module, writen in C++, that uses libpng to produce a PNG\r\nimage (in memory) from RGB or RGBA buffers.\r\n\r\nIt was written by Peteris Krumins (peter@catonmat.net).\r\nHis blog is at http://www.catonmat.net  --  good coders code, great reuse.\r\n\r\n------------------------------------------------------------------------------\r\n\r\nThe module exports three objects: `Png`, `FixedPngStack` and `DynamicPngStack`.\r\n\r\nThe `Png` object is for creating PNG images from an RGB or RGBA buffer.\r\nThe `FixedPngStack` is for joining a number of PNGs together (stacking them\r\ntogether) on a transparent blackground.\r\nThe `DynamicPngStack` is for joining a number of PNGs together in the most\r\nspace efficient way (so that the canvas border matches the leftmost upper corner\r\nof some PNG and the rightmost bottom corner of some PNG).\r\n\r\n\r\nPng\r\n---\r\n\r\nThe `Png` object takes 4 arguments in its constructor:\r\n\r\n    var png = new Png(buffer, width, height, buffer_type);\r\n\r\nThe first argument, `buffer`, is a node.js `Buffer` filled with RGB(A) values.\r\nThe second argument is integer width of the image.\r\nThe third argument is integer height of the image.\r\nThe fourth argument is \'rgb\', \'bgr\', \'rgba or \'bgra\'. Defaults to \'rgb\'.\r\n\r\nThe constructed `png` object has the `encode` method that\'s asynchronous in nature.\r\nYou give it a callback and it will call your function with a node.js Buffer object\r\ncontaining the encoded PNG data when it\'s done:\r\n\r\n    png.encode(function (png_image) {\r\n        // ...\r\n    });\r\n\r\nThe constructed `png` object also has `encodeSync` method that does the encoding\r\nsynchronously and returns Buffer with PNG image data:\r\n\r\n    var png_image = png.encode();\r\n\r\nYou can either send the png_image to the browser, or write to a file, or\r\ndo something else with it. See `examples/` directory for some examples.\r\n\r\n\r\nFixedPngStack\r\n-------------\r\n\r\nThe `FixedPngStack` object takes 3 arguments in its constructor:\r\n\r\n    var fixed_png = new FixedPngStack(width, height, buffer_type);\r\n\r\nThe first argument is integer width of the canvas image.\r\nThe second argument is integer height of the canvas image.\r\nThe third argument is \'rgb\', \'bgr\', \'rgba or \'bgra\'. Defaults to \'rgb\'.\r\n\r\nNow you can use the `push` method of `fixed_png` object to push buffers\r\nto the canvas. The `push` method takes 5 arguments:\r\n\r\n    fixed_png.push(buffer, x, y, w, h);\r\n\r\nIt pushes an RGB(A) image in `buffer` of width `w` and height `h` to the canvas\r\nposition (x, y). You can push as many buffers to canvas as you want. After\r\nthat you should call `encode` method or `encodeSync` method that will join all\r\nthe pushed RGB(A) buffers together and return a single PNG.\r\n\r\nAll the regions that did not get covered will be transparent.\r\n\r\n\r\nDynamicPngStack\r\n---------------\r\n\r\nThe `DynamicPngStack` object doesn\'t take any dimension arguments because its\r\nwidth and height is dynamically computed. To create it, do:\r\n\r\n    var dynamic_png = new DynamicPngStack(buffer_type);\r\n\r\nThe `buffer_type` again is \'rgb\', \'bgr\', \'rgba\' or \'bgra\', depending on what type\r\nof buffers you\'re gonna push to `dynamic_png`.\r\n\r\nIt provides four methods - `push`, `encode`, `encodeSync`, and `dimensions`. The\r\n`push` and `encode` methods are the same as in `FixedPngStack`. You `push` each\r\nof the RGB(A) buffers to the stack and after that you call `encode` or\r\n`encodeSync`.\r\n\r\nThe `encode` asynchronous method receives one more argument than others - it\r\nreceives the dimensions object with x, y, width and height of the dynamic PNG.\r\nSee the next paragraph for what the dimensions are.\r\n\r\nThe `dimensions` method is more interesting. It must be called only after\r\n`encode` as its values are calculated upon encoding the image. It returns an\r\nobject with `width`, `height`, `x` and `y` properties. The `width` and\r\n`height` properties show the width and the height of the final image. The `x`\r\nand `y` propreties show the position of the leftmost upper PNG.\r\n\r\nHere is an example that illustrates it. Suppose you wish to join two PNGs\r\ntogether. One with width 100x40 at position (5, 10) and the other with\r\nwidth 20x20 at position (2, 210). First you create the DynamicPngStack\r\nobject:\r\n\r\n    var dynamic_png = new DynamicPngStack();\r\n\r\nNext you push the RGB(A) buffers of the two PNGs to it:\r\n\r\n    dynamic_png.push(png1_buf, 5, 10, 100, 40);\r\n    dynamic_png.push(png2_buf, 2, 210, 20, 20);\r\n\r\nNow you can call `encode` to produce the final PNG:\r\n\r\n    var png = dynamic_png.encodeSync();\r\n\r\nNow let\'s see what the dimensions are,\r\n\r\n    var dims = dynamic_png.dimensions();\r\n\r\nSame asynchronously:\r\n\r\n    dynamic_png.encode(function (png, dims) {\r\n        // png is the PNG image (in a node.js Buffer)\r\n        // dims are its dimensions\r\n    });\r\n\r\nThe x position `dims.x` is 2 because the 2nd png is closer to the left.\r\nThe y position `dims.y` is 10 because the 1st png is closer to the top.\r\nThe width `dims.width` is 103 because the first png stretches from x=5 to\r\nx=105, but the 2nd png starts only at x=2, so the first two pixels are not\r\nnecessary and the width is 105-2=103.\r\nThe height `dims.height` is 220 because the 2nd png is located at 210 and\r\nits height is 20, so it stretches to position 230, but the first png starts\r\nat 10, so the upper 10 pixels are not necessary and height becomes 230-10= 220.\r\n\r\n\r\nHow to compile?\r\n---------------\r\n\r\nTo get the node-png module compiled, you need to have libpng and node.js\r\ninstalled. Then just run:\r\n\r\n    node-waf configure build\r\n\r\nto build node-png module. It will be called `png.node`. To use it, make sure\r\nit\'s in NODE_PATH.\r\n\r\nSee also http://github.com/pkrumins/node-jpeg module that produces JPEG images.\r\nAnd also http://github.com/pkrumins/node-gif for producing GIF images.\r\n\r\nIf you wish to stream PNGs over a websocket or xhr-multipart, you\'ll have to\r\nbase64 encode it. Use my http://github.com/pkrumins/node-base64 module to do\r\nthat.\r\n\r\n------------------------------------------------------------------------------\r\n\r\nHave fun producing PNGs!\r\n\r\n\r\nSincerely,\r\nPeteris Krumins\r\nhttp://www.catonmat.net\r\n\r\n',
40 silly resolved     _id: 'png@2.1.1',
40 silly resolved     _from: 'png' } ]
41 info install png@2.1.1 into C:\cygwin\home\Hexus\gifted\server
42 info installOne png@2.1.1
43 verbose from cache C:\Users\Hexus\AppData\Roaming\npm-cache\png\2.1.1\package\package.json
44 info C:\cygwin\home\Hexus\gifted\server\node_modules\png unbuild
45 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
46 verbose tar unpack C:\Users\Hexus\AppData\Roaming\npm-cache\png\2.1.1\package.tgz
47 silly lockFile 58f5b765-s-gifted-server-node-modules-png C:\cygwin\home\Hexus\gifted\server\node_modules\png
48 verbose lock C:\cygwin\home\Hexus\gifted\server\node_modules\png C:\Users\Hexus\AppData\Roaming\npm-cache\58f5b765-s-gifted-server-node-modules-png.lock
49 silly gunzTarPerm modes [ '755', '644' ]
50 silly gunzTarPerm extractEntry package.json
51 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
52 silly gunzTarPerm extractEntry .npmignore
53 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
54 silly gunzTarPerm extractEntry examples/png-example-async.js
55 silly gunzTarPerm modified mode [ 'examples/png-example-async.js', 438, 420 ]
56 silly gunzTarPerm extractEntry examples/png-example.js
57 silly gunzTarPerm modified mode [ 'examples/png-example.js', 438, 420 ]
58 silly gunzTarPerm extractEntry examples/png-example2.js
59 silly gunzTarPerm modified mode [ 'examples/png-example2.js', 438, 420 ]
60 silly gunzTarPerm extractEntry examples/png-example3.js
61 silly gunzTarPerm modified mode [ 'examples/png-example3.js', 438, 420 ]
62 silly gunzTarPerm extractEntry examples/rgba-terminal.dat
63 silly gunzTarPerm modified mode [ 'examples/rgba-terminal.dat', 438, 420 ]
64 silly gunzTarPerm extractEntry package.json~
65 silly gunzTarPerm modified mode [ 'package.json~', 438, 420 ]
66 silly gunzTarPerm extractEntry readme.txt
67 silly gunzTarPerm modified mode [ 'readme.txt', 438, 420 ]
68 silly gunzTarPerm extractEntry src/fixed_png_stack.cpp
69 silly gunzTarPerm modified mode [ 'src/fixed_png_stack.cpp', 438, 420 ]
70 silly gunzTarPerm extractEntry src/buffer_compat.cpp
71 silly gunzTarPerm modified mode [ 'src/buffer_compat.cpp', 438, 420 ]
72 silly gunzTarPerm extractEntry src/common.cpp
73 silly gunzTarPerm modified mode [ 'src/common.cpp', 438, 420 ]
74 silly gunzTarPerm extractEntry src/common.h
75 silly gunzTarPerm modified mode [ 'src/common.h', 438, 420 ]
76 silly gunzTarPerm extractEntry src/dynamic_png_stack.cpp
77 silly gunzTarPerm modified mode [ 'src/dynamic_png_stack.cpp', 438, 420 ]
78 silly gunzTarPerm extractEntry src/dynamic_png_stack.h
79 silly gunzTarPerm modified mode [ 'src/dynamic_png_stack.h', 438, 420 ]
80 silly gunzTarPerm extractEntry src/buffer_compat.h
81 silly gunzTarPerm modified mode [ 'src/buffer_compat.h', 438, 420 ]
82 silly gunzTarPerm extractEntry src/fixed_png_stack.h
83 silly gunzTarPerm modified mode [ 'src/fixed_png_stack.h', 438, 420 ]
84 silly gunzTarPerm extractEntry src/module.cpp
85 silly gunzTarPerm modified mode [ 'src/module.cpp', 438, 420 ]
86 silly gunzTarPerm extractEntry src/png.cpp
87 silly gunzTarPerm modified mode [ 'src/png.cpp', 438, 420 ]
88 silly gunzTarPerm extractEntry src/png.h
89 silly gunzTarPerm modified mode [ 'src/png.h', 438, 420 ]
90 silly gunzTarPerm extractEntry src/png_encoder.cpp
91 silly gunzTarPerm modified mode [ 'src/png_encoder.cpp', 438, 420 ]
92 silly gunzTarPerm extractEntry src/png_encoder.h
93 silly gunzTarPerm modified mode [ 'src/png_encoder.h', 438, 420 ]
94 silly gunzTarPerm extractEntry tests/dynamic-png-stack-async.js
95 silly gunzTarPerm modified mode [ 'tests/dynamic-png-stack-async.js', 438, 420 ]
96 silly gunzTarPerm extractEntry tests/dynamic-png-stack.js
97 silly gunzTarPerm modified mode [ 'tests/dynamic-png-stack.js', 438, 420 ]
98 silly gunzTarPerm extractEntry tests/fixed-png-stack-async.js
99 silly gunzTarPerm modified mode [ 'tests/fixed-png-stack-async.js', 438, 420 ]
100 silly gunzTarPerm extractEntry tests/fixed-png-stack.js
101 silly gunzTarPerm modified mode [ 'tests/fixed-png-stack.js', 438, 420 ]
102 silly gunzTarPerm extractEntry tests/push-data/11-rgba-128-386-16-10.dat
103 silly gunzTarPerm modified mode [ 'tests/push-data/11-rgba-128-386-16-10.dat', 438, 420 ]
104 silly gunzTarPerm extractEntry tests/push-data/01-rgba-80-389-16-7.dat
105 silly gunzTarPerm modified mode [ 'tests/push-data/01-rgba-80-389-16-7.dat', 438, 420 ]
106 silly gunzTarPerm extractEntry tests/push-data/03-rgba-80-397-32-2.dat
107 silly gunzTarPerm modified mode [ 'tests/push-data/03-rgba-80-397-32-2.dat', 438, 420 ]
108 silly gunzTarPerm extractEntry tests/push-data/04-rgba-96-386-16-10.dat
109 silly gunzTarPerm modified mode [ 'tests/push-data/04-rgba-96-386-16-10.dat', 438, 420 ]
110 silly gunzTarPerm extractEntry tests/push-data/05-rgba-96-397-32-2.dat
111 silly gunzTarPerm modified mode [ 'tests/push-data/05-rgba-96-397-32-2.dat', 438, 420 ]
112 silly gunzTarPerm extractEntry tests/push-data/06-rgba-96-397-32-2.dat
113 silly gunzTarPerm modified mode [ 'tests/push-data/06-rgba-96-397-32-2.dat', 438, 420 ]
114 silly gunzTarPerm extractEntry tests/push-data/07-rgba-112-386-16-10.dat
115 silly gunzTarPerm modified mode [ 'tests/push-data/07-rgba-112-386-16-10.dat', 438, 420 ]
116 silly gunzTarPerm extractEntry tests/push-data/08-rgba-112-397-32-2.dat
117 silly gunzTarPerm modified mode [ 'tests/push-data/08-rgba-112-397-32-2.dat', 438, 420 ]
118 silly gunzTarPerm extractEntry tests/push-data/09-rgba-112-389-32-7.dat
119 silly gunzTarPerm modified mode [ 'tests/push-data/09-rgba-112-389-32-7.dat', 438, 420 ]
120 silly gunzTarPerm extractEntry tests/push-data/10-rgba-112-397-32-2.dat
121 silly gunzTarPerm modified mode [ 'tests/push-data/10-rgba-112-397-32-2.dat', 438, 420 ]
122 silly gunzTarPerm extractEntry tests/push-data/02-rgba-96-390-16-5.dat
123 silly gunzTarPerm modified mode [ 'tests/push-data/02-rgba-96-390-16-5.dat', 438, 420 ]
124 silly gunzTarPerm extractEntry tests/push-data/12-rgba-128-397-32-2.dat
125 silly gunzTarPerm modified mode [ 'tests/push-data/12-rgba-128-397-32-2.dat', 438, 420 ]
126 silly gunzTarPerm extractEntry tests/push-data/13-rgba-144-386-16-10.dat
127 silly gunzTarPerm modified mode [ 'tests/push-data/13-rgba-144-386-16-10.dat', 438, 420 ]
128 silly gunzTarPerm extractEntry tests/push-data/14-rgba-144-397-32-2.dat
129 silly gunzTarPerm modified mode [ 'tests/push-data/14-rgba-144-397-32-2.dat', 438, 420 ]
130 silly gunzTarPerm extractEntry tests/push-data/15-rgba-144-389-16-7.dat
131 silly gunzTarPerm modified mode [ 'tests/push-data/15-rgba-144-389-16-7.dat', 438, 420 ]
132 silly gunzTarPerm extractEntry tests/push-data/16-rgba-144-397-32-2.dat
133 silly gunzTarPerm modified mode [ 'tests/push-data/16-rgba-144-397-32-2.dat', 438, 420 ]
134 silly gunzTarPerm extractEntry tests/push-data/17-rgba-160-393-16-6.dat
135 silly gunzTarPerm modified mode [ 'tests/push-data/17-rgba-160-393-16-6.dat', 438, 420 ]
136 silly gunzTarPerm extractEntry tests/push-data/18-rgba-176-397-16-2.dat
137 silly gunzTarPerm modified mode [ 'tests/push-data/18-rgba-176-397-16-2.dat', 438, 420 ]
138 silly gunzTarPerm extractEntry tests/push-data/19-rgba-160-397-32-2.dat
139 silly gunzTarPerm modified mode [ 'tests/push-data/19-rgba-160-397-32-2.dat', 438, 420 ]
140 silly gunzTarPerm extractEntry tests/push-data/20-rgba-176-386-16-10.dat
141 silly gunzTarPerm modified mode [ 'tests/push-data/20-rgba-176-386-16-10.dat', 438, 420 ]
142 silly gunzTarPerm extractEntry wscript
143 silly gunzTarPerm modified mode [ 'wscript', 438, 420 ]
144 verbose read json C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
145 silly lockFile 58f5b765-s-gifted-server-node-modules-png C:\cygwin\home\Hexus\gifted\server\node_modules\png
146 info preinstall png@2.1.1
147 verbose from cache C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
148 verbose readDependencies using package.json deps
149 verbose from cache C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
150 verbose readDependencies using package.json deps
151 silly resolved []
152 verbose about to build C:\cygwin\home\Hexus\gifted\server\node_modules\png
153 info build C:\cygwin\home\Hexus\gifted\server\node_modules\png
154 verbose from cache C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
155 verbose linkStuff [ false,
155 verbose linkStuff   false,
155 verbose linkStuff   false,
155 verbose linkStuff   'C:\\cygwin\\home\\Hexus\\gifted\\server\\node_modules' ]
156 info linkStuff png@2.1.1
157 verbose linkBins png@2.1.1
158 verbose linkMans png@2.1.1
159 verbose rebuildBundles png@2.1.1
160 info install png@2.1.1
161 verbose unsafe-perm in lifecycle true
162 silly exec cmd "/c" "node-waf configure build"
163 silly cmd,/c,node-waf configure build,C:\cygwin\home\Hexus\gifted\server\node_modules\png spawning
164 info png@2.1.1 Failed to exec install script
165 info C:\cygwin\home\Hexus\gifted\server\node_modules\png unbuild
166 verbose from cache C:\cygwin\home\Hexus\gifted\server\node_modules\png\package.json
167 info preuninstall png@2.1.1
168 info uninstall png@2.1.1
169 verbose true,C:\cygwin\home\Hexus\gifted\server\node_modules,C:\cygwin\home\Hexus\gifted\server\node_modules unbuild png@2.1.1
170 info postuninstall png@2.1.1
171 error png@2.1.1 install: `node-waf configure build`
171 error `cmd "/c" "node-waf configure build"` failed with 1
172 error Failed at the png@2.1.1 install script.
172 error This is most likely a problem with the png package,
172 error not with npm itself.
172 error Tell the author that this fails on your system:
172 error     node-waf configure build
172 error You can get their info via:
172 error     npm owner ls png
172 error There is likely additional logging output above.
173 error System Windows_NT 6.1.7601
174 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "png"
175 error cwd C:\cygwin\home\Hexus\gifted\server
176 error node -v v0.8.12
177 error npm -v 1.1.63
178 error code ELIFECYCLE
179 verbose exit [ 1, true ]
